# ---   
# - name: "Java Details: List installed Java RPM packages"
#   ansible.builtin.command: rpm -qa | grep java
#   register: java_rpms

# - name: "Java Details: Find Java executable"
#   ansible.builtin.command: which java
#   register: java_executable

# - name: "Java Details: List /usr/bin/java details"
#   ansible.builtin.command: ls -l /usr/bin/java
#   register: usr_bin_java

# - name: "Java Details: List /etc/alternatives/java details"
#   ansible.builtin.command: ls -l /etc/alternatives/java
#   register: etc_alternatives_java

# # - name: "Java Details: List contents of /usr/java/"
# #  ansible.builtin.command: ls -l /usr/java/
# #  register: usr_java_contents

# - name: "Running process Details: List all running processes"
#   ansible.builtin.command: ps -aux
#   register: running_processes

# - name: "Running non-root process Details: List non-root running processes"
#   ansible.builtin.shell: ps -ef | grep -v root
#   register: non_root_processes

# - name: Display Java RPM packages
#   ansible.builtin.debug:
#     msg: "{{ java_rpms.stdout }}"

# - name: Display Java executable
#   ansible.builtin.debug:
#     msg: "{{ java_executable.stdout }}"

# - name: Display /usr/bin/java details
#   ansible.builtin.debug:
#     msg: "{{ usr_bin_java.stdout }}"

# - name: Display /etc/alternatives/java details
#   ansible.builtin.debug:
#     msg: "{{ etc_alternatives_java.stdout }}"

# # - name: Display contents of /usr/java/
# #   ansible.builtin.debug:
# #     msg: "{{ usr_java_contents.stdout }}"

# - name: Display all running processes
#   ansible.builtin.debug:
#     msg: "{{ running_processes.stdout }}"

# - name: Display non-root running processes
#   ansible.builtin.debug:
#     msg: "{{ non_root_processes.stdout }}"

# - name: set variable for hostname 
#   ansible.builtin.set_fact:
#     Profilename: "{{ ansible_facts['fqdn'] }}"

# check if lsb_release is executable
- name: check /usr/bin/lsb_release file exists
  ansible.builtin.stat:
    path: /usr/bin/lsb_release
  register: lsb_release_result

- name: check if lsb_release_result is exists
  ansible.builtin.shell: " cat {{ lsb_release_result }} -d | awk -F: '{print $2}' | sed -e 's/^[\t]*/' "
  register: lsb_release_result_exec
  when: lsb_release_result.stat.exists 

- name: print lsb_release_result  
  ansible.builtin.debug:
    msg: "lsb_release does not exits"
  when: not lsb_release_result.stat.exists

- name: check /etc/system-release
  ansible.builtin.shell: "cat /etc/system-release"
  when: not lsb_release_result.stat.exists
  register: system_release_result

- name: debug system_release_result
  ansible.builtin.debug:
    msg: "{{ system_release_result.stdout_lines }}"