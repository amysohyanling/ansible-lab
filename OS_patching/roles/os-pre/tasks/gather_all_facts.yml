---
- name: 'Precheck |  BLOCK : Gather all facts'
  block:
    - name: 'GATHER_FACTS | Get the precheck facts'
      ansible.builtin.setup:
      register: precheck_facts_result

    # Get all running services
    - name: 'GATHER_FACTS | Get service facts'
      ansible.builtin.service_facts:
      register: precheck_servicefacts_result

    - name: Kernel version
      ansible.builtin.set_stats:
        data:
          total_uptime: "{{ ansible_facts['uptime_seconds'] }}"
          kernel_version: "{{ ansible_facts['kernel']}}"
          memory_mb: "{{ ansible_facts['memory_mb']['real']['total'] }}"

#    - name: CPU & Route and ifconfig

    # got to change the services name - here is wildfly 
    # - name: Check puppet service status
    #   ansible.builtin.set_stats:
    #     data:
    #       service_name: " {{ ansible_facts['services']['jboss-wildfly.service']['name'] }}"
    #       service_state: " {{ ansible_facts['services']['jboss-wildfly.service']['state'] }}"

    # - name: print out the service state
    #   ansible.builtin.debug:
    #     msg: "{{ service_name }} is currently {{ service_state }}"

    - name: Read /etc/hosts file
      ansible.builtin.command: cat /etc/hosts 
      register: hosts_file

    - name: debug hosts_file into set_fact
      ansible.builtin.set_fact:
        hosts_file_std: "{{ hosts_file.stdout_lines | default([]) }}"

    - name: Set hosts_file into set_fact
      ansible.builtin.set_fact:
        hosts_file_list: "{{ [] }}"
      when: hosts_file_list is not defined
        
    - name: Append inventory_hostname
      ansible.builtin.set_fact:
        hosts_file_list: "{{ hosts_file_list + [inventory_hostname] }}"

    - name: set hosts_file into set_fact
      ansible.builtin.set_fact:
        hosts_file_jinja: "{{ hosts_file_list }}"

    - name: Store stats per host
      ansible.builtin.set_stats:
        data:
          "{{ inventory_hostname }}_hosts_file": "{{ hosts_file_jinja }}"

    - name: Display updated hosts_file
      ansible.builtin.debug:
        msg: "{{ hosts_file_jinja }}"
#     - name: Read /etc/resolv.conf
#       ansible.builtin.command: cat /etc/resolv.conf
#       register: resolv_conf

#     - name: debug resolv_conf into set_fact
#       ansible.builtin.debug:
#         msg: "{{ resolv_conf.stdout_lines }}"
#       register: resolv_conf_std

#     - name: set resolv_conf into set_fact
#       ansible.builtin.set_stats:
#         data:
#           resolv_conf_file: "{{ resolv_conf_std }}"


#     - name: check mount point
#       ansible.builtin.command: df -TPh -x tmpfs
#       register: mount_point

#     - name: debug mount point into set_fact
#       ansible.builtin.debug:
#         msg: "{{ mount_point.stdout_lines }}"
#       register: mount_point_std

#     - name: set mount_point into set_fact
#       ansible.builtin.set_stats:
#         data:
#           mount_point_file: "{{ mount_point_std }}"
        

  rescue:
    - name: 'GATHER_FACTS |  Set failure message'
      ansible.builtin.set_fact:
        pre_check_status: false
        pre_check_fail: true
        pre_check_fail_stage: 'GATHER_FACTS'
        pre_check_fail_msg: "{{ ansible_failed_result }}"  



# - name: Combine hosts_file data into a dictionary
#   ansible.builtin.set_stats:
#     data:
#       hosts_file_jinja_combined: "{{ hosts_file_jinja_combined | default({}) | combine({inventory_hostname: hosts_file_std}) }}"
#     per_host: true
